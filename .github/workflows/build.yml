name: Build and Release

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 3.1.x

            - name: Install dependencies
              run: dotnet restore

            - name: Build
              run: dotnet publish -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
              env:
                  rid: ${{ matrix.rid }}

            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.os }}
                  path: bin/Release/netcoreapp3.1/${{ matrix.rid }}/publish

    release:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download Artifacts
              uses: actions/download-artifact@v2

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./ubuntu-latest/publish.zip
                  asset_name: myapp-linux.zip
                  asset_content_type: application/zip
            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./windows-latest/publish.zip
                  asset_name: myapp-win.zip
                  asset_content_type: application/zip
            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./macos-latest/publish.zip
                  asset_name: myapp-osx.zip
                  asset_content_type: application/zip
